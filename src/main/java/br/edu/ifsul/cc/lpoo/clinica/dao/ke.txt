public void insert_pets(PersistenciaJPA  per)
{
System.out.println("Adicionando pets no db...");
try {
Calendar c=Calendar.getInstance();
Pet p=new Pet();
p.setNome("Cachorrinho");
c.set(Calendar.MONTH, Calendar.JANUARY);
p.setDataNascimento(c);
pep.persist(p);
r=new Pet();
p.setNome("Bolinha");
c.set(Calendar.YEAR, 2020);
p.setDataNascimento(c);
pep.persist(p);
r=new Pet();
p.setNome("Lulu");
c.set(Calendar.YEAR, 2021);
p.setDataNascimento(c);
c.set(Calendar.MONTH, Calendar.APRIL);
pep.persist(r);
r=new Pet();
p.setNome("Laica");
c.set(Calendar.DAY_OF_MONTH, 15);
p.setDataNascimento(c);
pep.persist(r);
r=new Pet();
p.setNome("Dudu");
c.set(Calendar.MONTH, Calendar.MAY);
p.setDataNascimento(c);
pep.persist(r);
        } catch (Exception e) {
e.printStackTrace();
        }
}
public void show_pets(PersistenciaJPA  per)
{
System.out.println("Mostrando pets");
try {
List<Pet> pets=pep.listPets();
System.out.println("Id\tNome\tNascimento");
SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy HH:mm:ss:SSS");
for(Pet p: pets)
{
System.out.println(p.getId()+"\t"+p.getNome()+"\t"+sdf.format(p.getDataNascime nto().getTime());
}
        } catch (Exception e) {
e.printStackTrace();
        }
}
public void remove_pet(PersistenciaJPA  per, Integer id)
{
System.out.println("Removendo pet: "+id);
try {
Pet p=new Pet();
p.setId(id);
pep.remover(p);
        } catch (Exception e) {
e.printStackTrace();
        }
}
